name: Deploy
on:
  workflow_dispatch: {}
  # optional auto-deploy:
  # push: { branches: [ main ] }

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Load SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.PROD_SSH_KEY }}

      - name: Smoke test (prove SSH works & path visible)
        run: |
          set -eux
          ssh -o StrictHostKeyChecking=no -p "${{ secrets.PROD_SSH_PORT }}" \
            "${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }}" \
            "echo CONNECTED; whoami; pwd; ls -la '${{ secrets.PROD_PATH }}' || true"

      - name: Deploy
        run: |
          set -eux
          ssh -o StrictHostKeyChecking=no -p "${{ secrets.PROD_SSH_PORT }}" \
            "${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }}" 'bash -lc "
              set -euxo pipefail
              APP_DIR=\"${{ secrets.PROD_PATH }}\"
              BRANCH=\"main\"
              REPO_URL=\"https://github.com/${{ github.repository }}.git\"   # if repo is private, use SSH URL below
              # REPO_URL=\"git@github.com:T0kas75/homestack.git\"

              mkdir -p \"\$APP_DIR\"
              if [ ! -d \"\$APP_DIR/.git\" ]; then
                git clone --branch \"\$BRANCH\" --depth 1 \"\$REPO_URL\" \"\$APP_DIR\"
              else
                git -C \"\$APP_DIR\" fetch --depth 1 origin \"\$BRANCH\"
                git -C \"\$APP_DIR\" reset --hard \"origin/\$BRANCH\"
              fi

              # use .env â€” not base.env
              test -f \"\$APP_DIR/.env\" || { echo \"ERROR: \$APP_DIR/.env missing\"; exit 1; }

              cd \"\$APP_DIR\"
              if docker compose version >/dev/null 2>&1; then C=\"docker compose\"; \
              elif command -v docker-compose >/dev/null 2>&1; then C=\"docker-compose\"; \
              else echo \"ERROR: docker compose not installed\"; exit 1; fi

              \$C -f docker-compose.yml config -q
              \$C -f docker-compose.yml pull
              \$C -f docker-compose.yml up -d --remove-orphans

              echo HEAD: \$(git -C \"\$APP_DIR\" rev-parse --short HEAD)
              echo FILE:
              head -n 5 \"\$APP_DIR/testfile for CI CD\" || true
            "'
